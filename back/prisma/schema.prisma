generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RegisterLink {
  id          Int    @id @default(autoincrement())
  description String
  token       String @unique
  urlRegister String 
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String
  role     String
}

model Project {
  id                    Int                    @id @default(autoincrement())
  name                  String
  description           String
  configurationProjects ConfigurationProject[]
  dataConfigurations    DataConfiguration[]
}

model ConfigurationProject {
  id                Int                 @id @default(autoincrement())
  projectId         Int
  configurationId   Int
  description       String
  configuration     Configuration       @relation(fields: [configurationId], references: [id])
  project           Project             @relation(fields: [projectId], references: [id])
  dataConfiguration DataConfiguration[]
}

model Configuration {
  id                    Int                    @id @default(autoincrement())
  name                  String
  description           String
  componentKey          String?                @unique
  configurationProjects ConfigurationProject[]
  dataConfigurations    DataConfiguration[]
}

model DataConfiguration {
  id                             Int                             @id @default(autoincrement())
  configurationId                Int
  projectId                      Int?
  configurationProjectId         Int?
  configuration                  Configuration                   @relation(fields: [configurationId], references: [id])
  project                        Project?                        @relation(fields: [projectId], references: [id])
  configurationProject           ConfigurationProject?           @relation(fields: [configurationProjectId], references: [id])
  joystickConfiguration          JoystickConfiguration?
  joystickWebsocketConfiguration JoystickWebsocketConfiguration?
  mqttConfiguration              MQTTConfiguration?
  switchWebsocketConfiguration   SwitchWebsocketConfiguration?
  webSocketConfiguration         WebSocketConfiguration?
  leverWebsocketConfiguration    LeverWebsocketConfiguration?
}

model MQTTConfiguration {
  id                  Int               @id @default(autoincrement())
  dataConfigurationId Int               @unique
  host                String
  port                Int
  username            String
  password            String
  dataConfiguration   DataConfiguration @relation(fields: [dataConfigurationId], references: [id])
}

model WebSocketConfiguration {
  id                  Int               @id @default(autoincrement())
  dataConfigurationId Int               @unique
  host                String
  port                Int
  path                String
  dataConfiguration   DataConfiguration @relation(fields: [dataConfigurationId], references: [id])
}

model JoystickConfiguration {
  id                  Int               @id @default(autoincrement())
  dataConfigurationId Int               @unique
  sensitivity         Float
  deadZone            Float
  dataConfiguration   DataConfiguration @relation(fields: [dataConfigurationId], references: [id])
}

model JoystickWebsocketConfiguration {
  id                  Int               @id @default(autoincrement())
  dataConfigurationId Int               @unique
  host                String
  protocol            String
  identifier          String
  dataConfiguration   DataConfiguration @relation(fields: [dataConfigurationId], references: [id])
}

model SwitchWebsocketConfiguration {
  id                  Int               @id @default(autoincrement())
  dataConfigurationId Int               @unique
  host                String
  protocol            String
  identifier          String
  dataConfiguration   DataConfiguration @relation(fields: [dataConfigurationId], references: [id])
}

model LeverWebsocketConfiguration {
  id                  Int               @id @default(autoincrement())
  dataConfigurationId Int               @unique
  host                String
  protocol            String
  identifier          String
  dataConfiguration   DataConfiguration @relation(fields: [dataConfigurationId], references: [id])
}
